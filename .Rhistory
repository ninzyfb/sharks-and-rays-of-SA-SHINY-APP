addPolygons(data = notake,weight = 1,popup = ~CUR_NME,label = ~CUR_NME, color = "Blue",fillColor = "skyblue",fillOpacity = 0.6, group = "No-take zones")%>%
addPolygons(data = ccr,weight = 1,label = ~CUR_NME,popup = ~CUR_NME, color = "green4",fillColor = "green",fillOpacity = 0.6,group = "Mixed-use zones")%>%
addPolygons(data = c,weight = 1,label = ~CUR_NME,popup = ~CUR_NME, color = "Purple",fillColor = "purple",fillOpacity = 0.6,group = "Mixed-use zones")%>%
addPolygons(data = cpl,weight = 1,label = ~CUR_NME,popup = ~CUR_NME, color = "Purple",fillColor = "hotpink",fillOpacity = 0.6,group = "Mixed-use zones")%>%
addPolygons(data = clp,weight = 1,label = ~CUR_NME, popup = ~CUR_NME,color = "Purple",fillColor = "lightpink",fillOpacity = 0.6,group = "Mixed-use zones")%>%
addLegend("bottomleft",title = "Zone Types", colors = c("skyblue","purple","hotpink","lightpink","green"), opacity = 1,
labels = c("Wilderness, Sanctuary or Restricted (No-take zones)","Controlled (Mixed-use zones)","Controlled-Pelagic Linefish with List (Mixed-use zones)","Controlled Large Pelagic (Mixed-use zones)","Controlled Catch and Release (Mixed-use zone, only in iSimangaliso MPA - KZN)")) %>%
addLayersControl(overlayGroups = c("No-take zones","Mixed-use zones"), options = layersControlOptions(collapsed = FALSE,autoZIndex = TRUE))
leaflet() %>%
addPolygons(data = eez_sa,weight = 1, color = "grey",fillColor = "white",fillOpacity = 0)%>%
addPolylines(data = contours,weight = 1, color = "grey",label = ~DEPTH,popup = ~DEPTH,fillOpacity = 0)%>%
addPolygons(data = notake,weight = 1,popup = ~CUR_NME,label = ~CUR_NME, color = "Blue",fillColor = "skyblue",fillOpacity = 0.6, group = "No-take zones")%>%
addPolygons(data = ccr,weight = 1,label = ~CUR_NME,popup = ~CUR_NME, color = "green4",fillColor = "green",fillOpacity = 0.6,group = "Mixed-use zones")%>%
addPolygons(data = c,weight = 1,label = ~CUR_NME,popup = ~CUR_NME, color = "Purple",fillColor = "purple",fillOpacity = 0.6,group = "Mixed-use zones")%>%
addPolygons(data = cpl,weight = 1,label = ~CUR_NME,popup = ~CUR_NME, color = "Purple",fillColor = "hotpink",fillOpacity = 0.6,group = "Mixed-use zones")%>%
addPolygons(data = clp,weight = 1,label = ~CUR_NME, popup = ~CUR_NME,color = "Purple",fillColor = "lightpink",fillOpacity = 0.6,group = "Mixed-use zones")%>%
addLegend("bottomleft",title = "Zone Types", colors = c("skyblue","purple","hotpink","lightpink","green"), opacity = 1,
labels = c("Wilderness, Sanctuary or Restricted (No-take zones)","Controlled (Mixed-use zones)","Controlled-Pelagic Linefish with List (Mixed-use zones)","Controlled Large Pelagic (Mixed-use zones)","Controlled Catch and Release (Mixed-use zone, only in iSimangaliso MPA - KZN)")) %>%
addLayersControl(overlayGroups = c("No-take zones","Mixed-use zones"), options = layersControlOptions(collapsed = FALSE,autoZIndex = TRUE))
leaflet() %>%
addTiles()%>%
addPolygons(data = eez_sa,weight = 1, color = "grey",fillColor = "white",fillOpacity = 0)%>%
addPolylines(data = contours,weight = 1, color = "grey",label = ~DEPTH,popup = ~DEPTH,fillOpacity = 0)%>%
addPolygons(data = notake,weight = 1,popup = ~CUR_NME,label = ~CUR_NME, color = "Blue",fillColor = "skyblue",fillOpacity = 0.6, group = "No-take zones")%>%
addPolygons(data = ccr,weight = 1,label = ~CUR_NME,popup = ~CUR_NME, color = "green4",fillColor = "green",fillOpacity = 0.6,group = "Mixed-use zones")%>%
addPolygons(data = c,weight = 1,label = ~CUR_NME,popup = ~CUR_NME, color = "Purple",fillColor = "purple",fillOpacity = 0.6,group = "Mixed-use zones")%>%
addPolygons(data = cpl,weight = 1,label = ~CUR_NME,popup = ~CUR_NME, color = "Purple",fillColor = "hotpink",fillOpacity = 0.6,group = "Mixed-use zones")%>%
addPolygons(data = clp,weight = 1,label = ~CUR_NME, popup = ~CUR_NME,color = "Purple",fillColor = "lightpink",fillOpacity = 0.6,group = "Mixed-use zones")%>%
addLegend("bottomleft",title = "Zone Types", colors = c("skyblue","purple","hotpink","lightpink","green"), opacity = 1,
labels = c("Wilderness, Sanctuary or Restricted (No-take zones)","Controlled (Mixed-use zones)","Controlled-Pelagic Linefish with List (Mixed-use zones)","Controlled Large Pelagic (Mixed-use zones)","Controlled Catch and Release (Mixed-use zone, only in iSimangaliso MPA - KZN)")) %>%
addLayersControl(overlayGroups = c("No-take zones","Mixed-use zones"), options = layersControlOptions(collapsed = FALSE,autoZIndex = TRUE))
sa_map
# leaflet map
sa_map = leaflet() %>%
addTiles()%>%
addPolygons(data = eez_sa,weight = 1, color = "grey",fillColor = "white",fillOpacity = 0)%>%
addPolylines(data = contours,weight = 1, color = "grey",label = ~DEPTH,popup = ~DEPTH,fillOpacity = 0)%>%
addPolygons(data = notake,weight = 1,popup = ~CUR_NME,label = ~CUR_NME, color = "Blue",fillColor = "skyblue",fillOpacity = 0.6, group = "No-take zones")%>%
addPolygons(data = ccr,weight = 1,label = ~CUR_NME,popup = ~CUR_NME, color = "green4",fillColor = "green",fillOpacity = 0.6,group = "Mixed-use zones")%>%
addPolygons(data = c,weight = 1,label = ~CUR_NME,popup = ~CUR_NME, color = "Purple",fillColor = "purple",fillOpacity = 0.6,group = "Mixed-use zones")%>%
addPolygons(data = cpl,weight = 1,label = ~CUR_NME,popup = ~CUR_NME, color = "Purple",fillColor = "hotpink",fillOpacity = 0.6,group = "Mixed-use zones")%>%
addPolygons(data = clp,weight = 1,label = ~CUR_NME, popup = ~CUR_NME,color = "Purple",fillColor = "lightpink",fillOpacity = 0.6,group = "Mixed-use zones")%>%
addLegend("bottomleft",title = "Zone Types", colors = c("skyblue","purple","hotpink","lightpink","green"), opacity = 1,
labels = c("Wilderness, Sanctuary or Restricted (No-take zones)","Controlled (Mixed-use zones)","Controlled-Pelagic Linefish with List (Mixed-use zones)","Controlled Large Pelagic (Mixed-use zones)","Controlled Catch and Release (Mixed-use zone, only in iSimangaliso MPA - KZN)")) %>%
addLayersControl(overlayGroups = c("No-take zones","Mixed-use zones"), options = layersControlOptions(collapsed = FALSE,autoZIndex = TRUE))
sa_map
View(sa_map)
runApp()
?addTiles
# leaflet map
sa_map = leaflet() %>%
addTiles(tileOptions(maxZoom = 100))%>%
addPolygons(data = eez_sa,weight = 1, color = "grey",fillColor = "white",fillOpacity = 0)%>%
addPolylines(data = contours,weight = 1, color = "grey",label = ~DEPTH,popup = ~DEPTH,fillOpacity = 0)%>%
addPolygons(data = notake,weight = 1,popup = ~CUR_NME,label = ~CUR_NME, color = "Blue",fillColor = "skyblue",fillOpacity = 0.6, group = "No-take zones")%>%
addPolygons(data = ccr,weight = 1,label = ~CUR_NME,popup = ~CUR_NME, color = "green4",fillColor = "green",fillOpacity = 0.6,group = "Mixed-use zones")%>%
addPolygons(data = c,weight = 1,label = ~CUR_NME,popup = ~CUR_NME, color = "Purple",fillColor = "purple",fillOpacity = 0.6,group = "Mixed-use zones")%>%
addPolygons(data = cpl,weight = 1,label = ~CUR_NME,popup = ~CUR_NME, color = "Purple",fillColor = "hotpink",fillOpacity = 0.6,group = "Mixed-use zones")%>%
addPolygons(data = clp,weight = 1,label = ~CUR_NME, popup = ~CUR_NME,color = "Purple",fillColor = "lightpink",fillOpacity = 0.6,group = "Mixed-use zones")%>%
addLegend("bottomleft",title = "Zone Types", colors = c("skyblue","purple","hotpink","lightpink","green"), opacity = 1,
labels = c("Wilderness, Sanctuary or Restricted (No-take zones)","Controlled (Mixed-use zones)","Controlled-Pelagic Linefish with List (Mixed-use zones)","Controlled Large Pelagic (Mixed-use zones)","Controlled Catch and Release (Mixed-use zone, only in iSimangaliso MPA - KZN)")) %>%
addLayersControl(overlayGroups = c("No-take zones","Mixed-use zones"), options = layersControlOptions(collapsed = FALSE,autoZIndex = TRUE))
sa_map
# leaflet map
sa_map = leaflet() %>%
addTiles(tileOptions(maxZoom = 50))%>%
addPolygons(data = eez_sa,weight = 1, color = "grey",fillColor = "white",fillOpacity = 0)%>%
addPolylines(data = contours,weight = 1, color = "grey",label = ~DEPTH,popup = ~DEPTH,fillOpacity = 0)%>%
addPolygons(data = notake,weight = 1,popup = ~CUR_NME,label = ~CUR_NME, color = "Blue",fillColor = "skyblue",fillOpacity = 0.6, group = "No-take zones")%>%
addPolygons(data = ccr,weight = 1,label = ~CUR_NME,popup = ~CUR_NME, color = "green4",fillColor = "green",fillOpacity = 0.6,group = "Mixed-use zones")%>%
addPolygons(data = c,weight = 1,label = ~CUR_NME,popup = ~CUR_NME, color = "Purple",fillColor = "purple",fillOpacity = 0.6,group = "Mixed-use zones")%>%
addPolygons(data = cpl,weight = 1,label = ~CUR_NME,popup = ~CUR_NME, color = "Purple",fillColor = "hotpink",fillOpacity = 0.6,group = "Mixed-use zones")%>%
addPolygons(data = clp,weight = 1,label = ~CUR_NME, popup = ~CUR_NME,color = "Purple",fillColor = "lightpink",fillOpacity = 0.6,group = "Mixed-use zones")%>%
addLegend("bottomleft",title = "Zone Types", colors = c("skyblue","purple","hotpink","lightpink","green"), opacity = 1,
labels = c("Wilderness, Sanctuary or Restricted (No-take zones)","Controlled (Mixed-use zones)","Controlled-Pelagic Linefish with List (Mixed-use zones)","Controlled Large Pelagic (Mixed-use zones)","Controlled Catch and Release (Mixed-use zone, only in iSimangaliso MPA - KZN)")) %>%
addLayersControl(overlayGroups = c("No-take zones","Mixed-use zones"), options = layersControlOptions(collapsed = FALSE,autoZIndex = TRUE))
sa_map
# leaflet map
sa_map = leaflet() %>%
addTiles(tileOptions(maxZoom = 10))%>%
addPolygons(data = eez_sa,weight = 1, color = "grey",fillColor = "white",fillOpacity = 0)%>%
addPolylines(data = contours,weight = 1, color = "grey",label = ~DEPTH,popup = ~DEPTH,fillOpacity = 0)%>%
addPolygons(data = notake,weight = 1,popup = ~CUR_NME,label = ~CUR_NME, color = "Blue",fillColor = "skyblue",fillOpacity = 0.6, group = "No-take zones")%>%
addPolygons(data = ccr,weight = 1,label = ~CUR_NME,popup = ~CUR_NME, color = "green4",fillColor = "green",fillOpacity = 0.6,group = "Mixed-use zones")%>%
addPolygons(data = c,weight = 1,label = ~CUR_NME,popup = ~CUR_NME, color = "Purple",fillColor = "purple",fillOpacity = 0.6,group = "Mixed-use zones")%>%
addPolygons(data = cpl,weight = 1,label = ~CUR_NME,popup = ~CUR_NME, color = "Purple",fillColor = "hotpink",fillOpacity = 0.6,group = "Mixed-use zones")%>%
addPolygons(data = clp,weight = 1,label = ~CUR_NME, popup = ~CUR_NME,color = "Purple",fillColor = "lightpink",fillOpacity = 0.6,group = "Mixed-use zones")%>%
addLegend("bottomleft",title = "Zone Types", colors = c("skyblue","purple","hotpink","lightpink","green"), opacity = 1,
labels = c("Wilderness, Sanctuary or Restricted (No-take zones)","Controlled (Mixed-use zones)","Controlled-Pelagic Linefish with List (Mixed-use zones)","Controlled Large Pelagic (Mixed-use zones)","Controlled Catch and Release (Mixed-use zone, only in iSimangaliso MPA - KZN)")) %>%
addLayersControl(overlayGroups = c("No-take zones","Mixed-use zones"), options = layersControlOptions(collapsed = FALSE,autoZIndex = TRUE))
sa_map
# leaflet map
sa_map = leaflet() %>%
addTiles()%>%
addPolygons(data = eez_sa,weight = 1, color = "grey",fillColor = "white",fillOpacity = 0)%>%
addPolylines(data = contours,weight = 1, color = "grey",label = ~DEPTH,popup = ~DEPTH,fillOpacity = 0)%>%
addPolygons(data = notake,weight = 1,popup = ~CUR_NME,label = ~CUR_NME, color = "Blue",fillColor = "skyblue",fillOpacity = 0.6, group = "No-take zones")%>%
addPolygons(data = ccr,weight = 1,label = ~CUR_NME,popup = ~CUR_NME, color = "green4",fillColor = "green",fillOpacity = 0.6,group = "Mixed-use zones")%>%
addPolygons(data = c,weight = 1,label = ~CUR_NME,popup = ~CUR_NME, color = "Purple",fillColor = "purple",fillOpacity = 0.6,group = "Mixed-use zones")%>%
addPolygons(data = cpl,weight = 1,label = ~CUR_NME,popup = ~CUR_NME, color = "Purple",fillColor = "hotpink",fillOpacity = 0.6,group = "Mixed-use zones")%>%
addPolygons(data = clp,weight = 1,label = ~CUR_NME, popup = ~CUR_NME,color = "Purple",fillColor = "lightpink",fillOpacity = 0.6,group = "Mixed-use zones")%>%
addLegend("bottomleft",title = "Zone Types", colors = c("skyblue","purple","hotpink","lightpink","green"), opacity = 1,
labels = c("Wilderness, Sanctuary or Restricted (No-take zones)","Controlled (Mixed-use zones)","Controlled-Pelagic Linefish with List (Mixed-use zones)","Controlled Large Pelagic (Mixed-use zones)","Controlled Catch and Release (Mixed-use zone, only in iSimangaliso MPA - KZN)")) %>%
addLayersControl(overlayGroups = c("No-take zones","Mixed-use zones"), options = layersControlOptions(collapsed = FALSE,autoZIndex = TRUE))
sa_map
runApp()
# code below is to deploy the app to shiny server when it was on shinyapps.io
library(rsconnect)
# code below is to deploy the app to shiny server when it was on shinyapps.io
#library(rsconnect)
deployApp()
shiny::runApp()
# code below is to deploy the app to shiny server when it was on shinyapps.io
library(rsconnect)
deployApp()
runApp()
detach("package:htmltools", unload = TRUE)
library(htmltools)
runApp()
runApp()
# packages
library(leaflet)
library(leafpop)
library(tidyverse)
library(shinythemes)
library(reactable)
library(stringr)
library(sf)
library(terra)
library(dplyr)
library(DT)
library(htmlwidgets)
library(leaflegend)
library(readxl)
library(flextable)
library(shinyalert)
library(feather)# packages
library(leaflet)
library(leafpop)
library(tidyverse)
library(shinythemes)
library(reactable)
library(stringr)
library(sf)
library(terra)
library(dplyr)
library(DT)
library(htmlwidgets)
library(leaflegend)
library(readxl)
library(flextable)
library(shinyalert)
library(feather)
#library(mapboxer)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
# code below is to deploy the app to shiny server when it was on shinyapps.io
library(rsconnect)
deployApp()
shiny::runApp()
# packages
library(leaflet)
# helper websites
# https://towardsdatascience.com/putting-the-shine-in-shiny-apps-e3de370b5661
# packages
library(leaflet)
shiny::runApp()
shiny::runApp()
##################### IUCN COLORS
# Define a color palette for each IUCN Red List status
status_colors <- c(
"VU" = "rgba(255, 255, 0, 0.7)",     # Vulnerable
"LC" = "rgba(0, 128, 0, 0.7)",     # Least Concern
"EN" = "rgba(255, 165, 0, 0.7)",  # Endangered
"DD" = "rgba(128, 128, 128, 0.7)", # Data Deficient
"CR" = "rgba(255, 0, 0, 0.7)",     # Critically Endangered
"NT" = "#B0E57C"    # Near Threatened
)
##################### ENDEMIC COLORS
# Define a color palette for each IUCN Red List status
endemic_colors <- c(
"South Africa" = "#800080",   # Gold
"Southern Africa" = "#9370DB", # Silver
"Not endemic" = "#D8BFD8"     # Bronze
)
##################### ICONS
# Define custom icons
icon_blue <- makeIcon(
iconUrl = list.files(pattern = "boundary_cross.png",recursive=TRUE,full.names=TRUE),  # Replace with the path to your custom icon image
iconWidth = 32,  # Adjust the width and height as needed
iconHeight = 32
)
##################### MPA OVERVIEW DATA
mpa_data_overview = readRDS(list.files(pattern = "mpa_data_overview.RDS",recursive=TRUE))
##################### EEZ DATA
eez_sa =  ms_simplify(st_read(list.files(pattern = "eez.shp",recursive = TRUE, full.names = TRUE)))
##################### SPECIES PER MPA DATA
# File
species_overlapdata = read_feather(list.files(pattern = "species_permpa_byiusnandsdms.feather", recursive=TRUE,full.names = TRUE))
##################### RASTER DATA
# Read the data
#all_distributions = stack(list.files(path = "/home/nina/Dropbox/6-WILDOCEANS/1-ConservationPlan/wildoceans-scripts_github/Outputs/distribution_rasters/", pattern = "ensemblemean.tiff",full.names = TRUE))
#saveRDS(all_distributions,"all_distributions.RDS")
all_distributions = readRDS(list.files(pattern = "all_distributions.RDS",recursive = TRUE,full.names=TRUE))
##################### POLYGON DATA FROM IUCN
iucn_file_list = readRDS(list.files(pattern = "iucn_file_list.RDS",recursive = TRUE))
##################### add some info to overlap data
species_overlapdata = read_feather(list.files(pattern = "species_overlapdata",recursive=TRUE,full.names=TRUE))
##################### EAST AND WEST BOUNDARIES PER SPECIES
boundaries = read_feather(list.files(pattern = "boundaries.feather",recursive=TRUE,full.names=TRUE))
##################### DATA POINTS PER HIGH RES GRID CELL
highres_gps = readRDS(list.files(pattern = "mostrecent_highres.RDS",recursive = TRUE, full.names = TRUE))
#####################  INITIAL MAP BOUNDARIES
# Define the initial map bounds (you can adjust these values)
initialBounds <- list(
lng1 = 17,
lat1 = -30,
lng2 = 33,
lat2 = -40
)
##################### MOST RECENT SIGHTING PER MPA
mostrecent_sighting = read_feather(list.files(pattern = "mostrecent_sighting.feather",recursive=TRUE,full.names = TRUE))
##################### DATA POINTS PER HIGH RES GRID CELL
lifehistory = read_feather(list.files(pattern = "lifehistory_parameters.feather",recursive = TRUE, full.names = TRUE))
##################### DATA POINTS PER HIGH RES GRID CELL
contours =  ms_simplify(readRDS(list.files(pattern = "contours.RDS",recursive = TRUE)))
##################### list of data providers and institutions
providers = read_xlsx(list.files(pattern = "data_providers_updated",recursive=TRUE,  full.names=TRUE),sheet = 1)
providers = unique(providers)
institutions = read_xlsx(list.files(pattern = "data_providers_updated",recursive=TRUE,  full.names=TRUE),sheet = 2)
institutions = unique(institutions)
institutions <- flextable(data = institutions, col_keys = c("Dataset affiliation (not necessarily current owner's affiliation)", "Relevant affiliation link (if applicable)"))%>%
autofit()
institutions <- compose(x = institutions, j = 2, value = as_paragraph( hyperlink_text(x = `Relevant affiliation link (if applicable)`, url = `Relevant affiliation link (if applicable)`)))
##################### MPA DATA
shapefile_data_simple =  ms_simplify(readRDS(list.files(pattern = "shapefile_data_simple.RDS",recursive = TRUE)))
##################### MASTER SHEET
# File
master = read_feather(list.files(pattern = "master.feather",recursive=TRUE,full.names=TRUE))
##### species summary table
table1 = master%>%
rename("IUCN range available?" = iucn) %>%
rename("Species Distribution Model produced?" = sdm)%>%
mutate(SPECIES_SCIENTIFIC = str_to_sentence(SPECIES_SCIENTIFIC))%>%
rename("Common name" = Species_common)%>%
rename("Scientific name" = SPECIES_SCIENTIFIC)%>%
rename("IUCN Red List Status" = STATUS)%>%
rename("Endemic status" = ENDEMIC.STATUS)%>%
rename("Group" = group)
View(table1)
table1 %>%
group_by(Group,`IUCN Red List Status`)%>%
ggplot()+
geom_bar()
library(ggplot2)
table1 %>%
group_by(Group,`IUCN Red List Status`)%>%
ggplot()+
geom_bar()
table1 %>%
group_by(Group,`IUCN Red List Status`)%>%
ggplot()+
geom_col()
table1 %>%
group_by(Group,`IUCN Red List Status`)%>%
summarise(count = n())
table1 %>%
group_by(Group,`IUCN Red List Status`)%>%
summarise(count = n())%>%
ggplot()+
geom_col()
table1 %>%
ggplot(aes(y = `IUCN Red List Status`,))+
geom_col()
table1 %>%
ggplot(aes(y = `IUCN Red List Status`,))+
geom_bar()
runApp()
detach("package:xlsx", unload = TRUE)
library(xlsx)
runApp()
runApp()
shiny::runApp()
shiny::runApp()
##################### PACKAGES
library(leaflet)
library(leafpop)
library(shinythemes)
library(reactable)
library(stringr)
library(sf)
library(terra)
library(dplyr)
library(DT)
library(htmlwidgets)
library(leaflegend)
library(readxl)
library(flextable)
library(shinyalert)
library(feather)
library(rmapshaper)
#library(mapboxer)
#library(plotly)
##################### PACKAGES
# map box token
#Sys.setenv('MAPBOX_TOKEN' = 'pk.eyJ1IjoibmluenlmYiIsImEiOiJjbHVxc3NzcjYwMXVkMnNxcWpjcGxpZHU0In0.e91nxemBTH3tAcwtoAroIw')
##################### IUCN COLORS
# Define a color palette for each IUCN Red List status
status_colors <- c(
"VU" = "rgba(255, 255, 0, 0.7)",     # Vulnerable
"LC" = "rgba(0, 128, 0, 0.7)",     # Least Concern
"EN" = "rgba(255, 165, 0, 0.7)",  # Endangered
"DD" = "rgba(128, 128, 128, 0.7)", # Data Deficient
"CR" = "rgba(255, 0, 0, 0.7)",     # Critically Endangered
"NT" = "#B0E57C"    # Near Threatened
)
##################### IUCN COLORS
##################### ENDEMIC COLORS
# Define a color palette for each IUCN Red List status
endemic_colors <- c(
"South Africa" = "#800080",   # Gold
"Southern Africa" = "#9370DB", # Silver
"Not endemic" = "#D8BFD8"     # Bronze
)
##################### ENDEMIC COLORS
##################### ICONS
# Define custom icons
icon_blue <- makeIcon(
iconUrl = list.files(pattern = "boundary_cross.png",recursive=TRUE,full.names=TRUE),  # Replace with the path to your custom icon image
iconWidth = 32,  # Adjust the width and height as needed
iconHeight = 32
)
##################### ICONS
##################### MPA OVERVIEW DATA
mpa_data_overview = readRDS(list.files(pattern = "mpa_data_overview.RDS",recursive=TRUE))
##################### MPA OVERVIEW DATA
##################### EEZ DATA
eez_sa =  ms_simplify(st_read(list.files(pattern = "eez.shp",recursive = TRUE, full.names = TRUE)))
##################### EEZ DATA
##################### SPECIES PER MPA DATA
# File
species_overlapdata = read_feather(list.files(pattern = "species_permpa_byiusnandsdms.feather", recursive=TRUE,full.names = TRUE))
##################### SPECIES PER MPA DATA
##################### RASTER DATA
# Read the data
#all_distributions = stack(list.files(path = "/home/nina/Dropbox/6-WILDOCEANS/1-ConservationPlan/wildoceans-scripts_github/Outputs/distribution_rasters/", pattern = "ensemblemean.tiff",full.names = TRUE))
#saveRDS(all_distributions,"all_distributions.RDS")
all_distributions = readRDS(list.files(pattern = "all_distributions.RDS",recursive = TRUE,full.names=TRUE))
##################### RASTER DATA
##################### POLYGON DATA FROM IUCN
iucn_file_list = readRDS(list.files(pattern = "iucn_file_list.RDS",recursive = TRUE))
##################### POLYGON DATA FROM IUCN
##################### add some info to overlap data
species_overlapdata = read_feather(list.files(pattern = "species_overlapdata",recursive=TRUE,full.names=TRUE))
# remove new_areas
species_overlapdata = species_overlapdata[!str_detect(species_overlapdata$CUR_NME,"newarea"),]
##################### add some info to overlap data
##################### EAST AND WEST BOUNDARIES PER SPECIES
boundaries = read_feather(list.files(pattern = "boundaries.feather",recursive=TRUE,full.names=TRUE))
#####################  EAST AND WEST BOUNDARIES PER SPECIES
##################### DATA POINTS PER HIGH RES GRID CELL
highres_gps = readRDS(list.files(pattern = "mostrecent_highres.RDS",recursive = TRUE, full.names = TRUE))
#####################  DATA POINTS PER HIGH RES GRID CELL
#####################  INITIAL MAP BOUNDARIES
# Define the initial map bounds (you can adjust these values)
initialBounds <- list(
lng1 = 17,
lat1 = -30,
lng2 = 33,
lat2 = -40
)
##################### INITIAL MAP BOUNDARIES
##################### MOST RECENT SIGHTING PER MPA
mostrecent_sighting = read_feather(list.files(pattern = "mostrecent_sighting.feather",recursive=TRUE,full.names = TRUE))
##################### MOST RECENT SIGHTING PER MPA
##################### DATA POINTS PER HIGH RES GRID CELL
lifehistory = read_feather(list.files(pattern = "lifehistory_parameters.feather",recursive = TRUE, full.names = TRUE))
#####################  DATA POINTS PER HIGH RES GRID CELL
##################### DATA POINTS PER HIGH RES GRID CELL
contours =  ms_simplify(readRDS(list.files(pattern = "contours.RDS",recursive = TRUE)))
#####################  DATA POINTS PER HIGH RES GRID CELL
##################### list of data providers and institutions
providers = read_xlsx(list.files(pattern = "data_providers_updated",recursive=TRUE,  full.names=TRUE),sheet = 1)
providers = unique(providers)
institutions = read_xlsx(list.files(pattern = "data_providers_updated",recursive=TRUE,  full.names=TRUE),sheet = 2)
institutions = unique(institutions)
institutions <- flextable(data = institutions, col_keys = c("Dataset affiliation (not necessarily current owner's affiliation)", "Relevant affiliation link (if applicable)"))%>%
autofit()
institutions <- compose(x = institutions, j = 2, value = as_paragraph( hyperlink_text(x = `Relevant affiliation link (if applicable)`, url = `Relevant affiliation link (if applicable)`)))
##################### list of data providers and institutions
##################### MPA DATA
shapefile_data_simple =  ms_simplify(readRDS(list.files(pattern = "shapefile_data_simple.RDS",recursive = TRUE)))
shapefile_data_no_geom <- st_drop_geometry(shapefile_data_simple)
##################### MPA DATA
##################### MASTER SHEET
# File
master = read_feather(list.files(pattern = "master.feather",recursive=TRUE,full.names=TRUE))
##################### MASTER SHEET
##### species summary table
table1 = master%>%
rename("IUCN range available?" = iucn) %>%
rename("Species Distribution Model produced?" = sdm)%>%
mutate(SPECIES_SCIENTIFIC = str_to_sentence(SPECIES_SCIENTIFIC))%>%
rename("Common name" = Species_common)%>%
rename("Scientific name" = SPECIES_SCIENTIFIC)%>%
rename("IUCN Red List Status" = STATUS)%>%
rename("Endemic status" = ENDEMIC.STATUS)%>%
rename("Group" = group)
##### species summary table
##################### list of species per map as well as their most recent sighing
compiled_species_list = read_feather(list.files(pattern = "compiled_species_list.feather",recursive = TRUE, full.names = TRUE))
compiled_species_list = compiled_species_list[!str_detect(compiled_species_list$CUR_NME,"newarea"),]
##################### list of species per map as well as their most recent sighing
##################### PREPARE MASTER TABLE FOR FIRST PAGE
overlap_shortened = read_feather(list.files(pattern = "overlap_shortened",recursive=TRUE,full.names=TRUE))
overlap_shortened = left_join(overlap_shortened,master[,1:2])
overlap_shortened$combined_name = paste0(overlap_shortened$SPECIES_SCIENTIFIC," (",overlap_shortened$Species_common,")")
overlap_shortened$Species_common = NULL
##################### PREPARE MASTER TABLE FOR FIRST PAGE
##################### Expert extents
load(list.files(pattern = "points.RData", recursive = TRUE, full.names = TRUE))
expert_extent = points
rm(points)
colnames(expert_extent)[1] = "SPECIES_SCIENTIFIC"
expert_extent$SPECIES_SCIENTIFIC = toupper(expert_extent$SPECIES_SCIENTIFIC)
expert_extent = st_as_sf(expert_extent)
expert_extent = left_join(overlap_shortened,expert_extent)
##################### Expert extents
##################### leaflet map
# zone type (test to speed up mapping)
notake = ms_simplify(readRDS(list.files(pattern ="notake.RDS",recursive = TRUE,full.names = TRUE)))
ccr = ms_simplify(readRDS(list.files(pattern ="ccr.RDS",recursive = TRUE,full.names = TRUE)))
c =  ms_simplify(readRDS(list.files(pattern ="c.RDS",recursive = TRUE,full.names = TRUE)))
cpl = ms_simplify(readRDS(list.files(pattern ="cpl.RDS",recursive = TRUE,full.names = TRUE)))
clp =  ms_simplify(readRDS(list.files(pattern ="clp.RDS",recursive = TRUE,full.names = TRUE)))
sa_map = leaflet() %>%
addTiles()%>%
addPolygons(data = eez_sa,weight = 1, color = "grey",fillColor = "white",fillOpacity = 0)%>%
addPolylines(data = contours,weight = 1, color = "grey",label = ~DEPTH,popup = ~DEPTH,fillOpacity = 0)%>%
addPolygons(data = notake,weight = 1,popup = ~CUR_NME,label = ~CUR_NME, color = "Blue",fillColor = "skyblue",fillOpacity = 0.6, group = "No-take zones")%>%
addPolygons(data = ccr,weight = 1,label = ~CUR_NME,popup = ~CUR_NME, color = "green4",fillColor = "green",fillOpacity = 0.6,group = "Mixed-use zones")%>%
addPolygons(data = c,weight = 1,label = ~CUR_NME,popup = ~CUR_NME, color = "Purple",fillColor = "purple",fillOpacity = 0.6,group = "Mixed-use zones")%>%
addPolygons(data = cpl,weight = 1,label = ~CUR_NME,popup = ~CUR_NME, color = "Purple",fillColor = "hotpink",fillOpacity = 0.6,group = "Mixed-use zones")%>%
addPolygons(data = clp,weight = 1,label = ~CUR_NME, popup = ~CUR_NME,color = "Purple",fillColor = "lightpink",fillOpacity = 0.6,group = "Mixed-use zones")%>%
addLegend("bottomleft",title = "Zone Types", colors = c("skyblue","purple","hotpink","lightpink","green"), opacity = 1,
labels = c("Wilderness, Sanctuary or Restricted (No-take zones)","Controlled (Mixed-use zones)","Controlled-Pelagic Linefish with List (Mixed-use zones)","Controlled Large Pelagic (Mixed-use zones)","Controlled Catch and Release (Mixed-use zone, only in iSimangaliso MPA - KZN)")) %>%
addLayersControl(overlayGroups = c("No-take zones","Mixed-use zones"), options = layersControlOptions(collapsed = FALSE,autoZIndex = TRUE))
##################### leaflet map
plot(all_distributions[[1]])
test = as.polygons(all_distributions[[1]])
plot(test)
?as.polygons
test = as.polygons(all_distributions[[1]],na.rm=FALSE)
plot(test)
test = all_distributions[[1]]
values(test) = 1
test = as.polygons(test,na.rm=FALSE)
plot(test)
test = all_distributions[[1]]
values(test) = 1:length(values(test))
test = as.polygons(test,na.rm=FALSE)
plot(test)
st_write(test,"shapefile_grid.shp")
shapefile(test,"shapefile_grid.shp")
write(test,"shapefile_grid.shp")
test= st_as_sf(test)
st.write(test,"shapefile_grid.shp")
st_write(test,"shapefile_grid.shp")
test = all_distributions[[1]]
values(test) = 1:length(values(test))
test = as.polygons(test,na.rm=FALSE)
plot(test)
writeVector(test,"shapefile_grid.shp")
library(leaflet)
library(leafpop)
library(shinythemes)
library(reactable)
library(stringr)
library(sf)
library(terra)
library(dplyr)
library(DT)
library(htmlwidgets)
library(leaflegend)
library(readxl)
library(flextable)
library(shinyalert)
library(feather)
library(rmapshaper)
getwd(
)
list.files(path = "/home/nina/Dropbox/SCP-sharks-and-rays/SCP_NFB_2023_OUTPUTS/SCP_outputs")
list.files(path = "/home/nina/Dropbox/SCP-sharks-and-rays/SCP_NFB_2023_OUTPUTS/SCP_outputs/Management_scenarios")
FILE = list.files(path = "/home/nina/Dropbox/SCP-sharks-and-rays/SCP_NFB_2023_OUTPUTS/SCP_outputs/Management_scenarios/p022_Management_scenario_allsolutions.RDS")
FILE = list.files(path = "/home/nina/Dropbox/SCP-sharks-and-rays/SCP_NFB_2023_OUTPUTS/SCP_outputs/Management_scenarios",pattern = "p022_Management_scenario_allsolutions.RDS")
FILE = list.files(path = "/home/nina/Dropbox/SCP-sharks-and-rays/SCP_NFB_2023_OUTPUTS/SCP_outputs/Management_scenarios",pattern = "p022_Management_scenario_allsolutions.RDS",full.names = TRUE)
all_sols = read.RDS(FILE)
all_sols = readRDS(FILE)
library(raster)
all_sols = readRDS(FILE)
nlayers(all_sols)
plot(all_sols[[12]])
plot(all_sols[[25]])
plot(all_sols)
plot(all_sols[[67]])
